name: 'release'

on: [workflow_dispatch]

jobs:
  release:
    name: Semantic Release
    runs-on: macos-latest
    outputs:
      release_published: ${{ steps.semantic.outputs.new_release_published }}
      release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: 'Checkout sources'
        uses: actions/checkout@v4

      - name: 'Setup NodeJS'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: 'Force HTTPS'
        run: git config --global url."https://github".insteadOf ssh://git@github

      - name: 'Install dependencies'
        run: yarn install

      - name: 'Compile TypeScript'
        run: yarn build

      - name: 'Semantic Release'
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 'Create distribution build'
        if: steps.semantic.outputs.new_release_published == 'true'
        run: yarn dist:build

      - name: 'Create Linux binaries'
        if: steps.semantic.outputs.new_release_published == 'true'
        run: yarn dist:pkg:linux

      - name: 'Create Windows binary'
        if: steps.semantic.outputs.new_release_published == 'true'
        run: yarn dist:pkg:windows

      - name: 'Create macOS binary'
        if: steps.semantic.outputs.new_release_published == 'true'
        run: yarn dist:pkg:macos

      - name: 'Bundle macOS binary'
        if: steps.semantic.outputs.new_release_published == 'true'
        run: yarn dist:bundle:macos

      - name: 'Add assets to release'
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.semantic.outputs.new_release_version }}
          files: |
            binaries/mudslide-linuxstatic-x64
            binaries/mudslide-linuxstatic-arm64
            binaries/mudslide.exe
            binaries/mudslide-macos.tgz
  
  dockerhub_release:
    needs: release
    if: needs.release.outputs.release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: robvanderleek
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: Dockerfile
          push: true
          tags: |
            robvanderleek/mudslide:latest
            robvanderleek/mudslide:${{ needs.release.outputs.release_version }}
